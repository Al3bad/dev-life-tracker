{"version":3,"sources":["components/Weather/Weather.js","components/Title/Title.js","components/TimeTracker/TimeTracker.js","components/TimeTracker/ProjectsList/ProjectsList.js","components/Loading/Loading.js","components/Schedule/Event/Event.js","components/Schedule/Schedule.js","components/Tasks/Tasks.js","data.js","App.js","serviceWorker.js","index.js"],"names":["Weather","props","className","weather","icon","color","size","animate","temperature","Title","this","title","React","Component","TimeTracker","allTimes","activities","map","obj","i","key","moment","date","format","isSame","text","style","width","isRendered","percentage","clipPath","WebkitClipPath","totalTime","ProjectsList","onChange","projectsDropdownHandler","isFetchingActivity","name","id","projects","projectName","value","Welcoming","componentWillUnmount","onLoadedData","viewBox","fill","xmlns","d","Event","animationDelay","delay","event","start","end","Schedule","eventList","events","Tasks","tasks","task","onClick","deleteTask","bind","type","currentDate","data","isDone","total_seconds","App","state","displayLoading","isFetching","time","selectedProject","isReady","scheduleReady","tasksReady","activityReady","manipulateTime","minutes","add","setState","target","addTaskHandler","e","preventDefault","inputElement","newTask","length","deleteTaskHandler","taskId","item","document","querySelector","itemCheckbox","disabled","setTimeout","classList","updatedTasksArr","filter","body","overflow","console","log","setInterval","currentTime","onSubmit","ref","a","placeholder","elementRef","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.346c6ddb.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nimport \"./Weather.scss\";\n\nconst Weather = (props) => {\n  return (\n    <div className=\"weather\">\n      {props.weather.icon && (\n        <>\n          <div className=\"icon-container\">\n            <ReactAnimatedWeather\n              icon={props.weather.icon}\n              color=\"white\"\n              size={100}\n              animate={true}\n            />\n            <p>{props.weather.temperature}&deg;</p>\n          </div>\n          <p className=\"region\">Australia, Melbourne</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\nimport \"./Title.scss\";\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"title\">\n        <h4 className=\"title__title\">{this.props.title}</h4>\n        <hr className=\"title__line\" />\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"moment\";\nimport \"./TimeTracker.scss\";\nimport moment from \"moment\";\n\nclass TimeTracker extends React.Component {\n  render() {\n    const allTimes = this.props.activities.map((obj, i) => {\n      return (\n        <div\n          className={`row `}\n          key={i}\n        >\n          <h4 className=\"row__day\">{moment(obj.date).format(\"ddd\")}</h4>\n          <div className={`row__bar-container ${moment(obj.date).isSame(\n            moment().format(\"YYYY-MM-DD\")\n          ) && \"today\"}`}>\n            <p className=\"row__bar-container__white-text\">{obj.text}</p>\n            <div\n              className=\"row__bar-container__bar\"\n              style={{\n                width: `${\n                  this.props.isRendered && obj.percentage ? obj.percentage : 0\n                }%`\n              }}\n            ></div>\n            <div\n              className=\"row__bar-container__bar-bg\"\n              style={{ width: `100%` }}\n            ></div>\n            <p\n              className=\"row__bar-container__black-text\"\n              style={{\n                clipPath: `polygon(0 0, ${\n                  this.props.isRendered && obj.percentage ? obj.percentage : 0\n                }% 0, ${\n                  this.props.isRendered && obj.percentage ? obj.percentage : 0\n                }% 100%, 0 100%)`,\n                WebkitClipPath: `polygon(0 0, ${\n                  this.props.isRendered && obj.percentage ? obj.percentage : 0\n                }% 0, ${\n                  this.props.isRendered && obj.percentage ? obj.percentage : 0\n                }% 100%, 0 100%)`,\n              }}\n            >\n              {obj.text}\n            </p>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"time-tracker\">\n        <div className=\"times-container\">{allTimes}</div>\n        <br />\n        <div className=\"total\">\n          <h4 className=\"total__title\">TOTAL</h4>\n          <div className=\"total__time\">\n            <h4>\n              {this.props.totalTime[0]} <span>hrs</span>{\" \"}\n              {this.props.totalTime[1]} <span>mins</span>\n            </h4>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimeTracker;\n","import React from \"react\";\nimport \"./ProjectsList.scss\"\n\nclass ProjectsList extends React.Component {\n  render() {\n    return (\n      <select onChange={this.props.projectsDropdownHandler} className={`projects-list ${this.props.isFetchingActivity && \"disabled\"}`} name=\"project\" id=\"project\">\n        {this.props.projects.map(projectName => (\n          <option key={projectName} value={projectName}>{projectName}</option>\n        ))}\n      </select>\n    );\n  }\n}\n\nexport default ProjectsList;\n","import React from \"react\";\nimport \"./Loading.scss\";\n\nclass Welcoming extends React.Component {\n  componentWillUnmount = () => {\n    this.props.onLoadedData();\n  };\n  render() {\n    return (\n      <div className=\"loading\">\n        {/* <p>Fetching Data</p> */}\n        <div className=\"lds-ring\">\n          <svg  viewBox=\"0 0 343 287\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0 143.376L116.182 66.101V101.303L54.578 143.144L116.104 185.602L116.182 220.727L0 143.376Z\" fill=\"white\"/>\n            <path d=\"M100.088 149.27H81.444V108.874H100.088V149.27Z\" fill=\"white\"/>\n            <path d=\"M342.502 143.453L226.32 220.727V185.525L287.924 143.684L226.397 101.226L226.32 66.101L342.502 143.453Z\" fill=\"white\"/>\n            <path d=\"M242.414 137.558H261.058V177.954H242.414V137.558Z\" fill=\"white\"/>\n            <path d=\"M131.164 286.829L114.516 281.094L211.338 0L227.986 5.734L131.164 286.829Z\" fill=\"white\"/>\n          </svg>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Welcoming;\n","import React from \"react\";\nimport moment from \"moment\"\nimport \"./Event.scss\";\n\nconst Event = props => {\n  return (\n    <div className={`event ${props.isRendered && \"event-ready\"}`} style={{animationDelay: `${props.delay}s`}} >\n      <p className=\"event__name\">{props.event.name}</p>\n      <div className=\"event__time-container\">\n        <p className=\"event__time-container__time-start\">{moment(props.event.start).format(\"h:mmA\")}</p>\n        <div className=\"event__time-container__line\"></div>\n        <p className=\"event__time-container__time-end\">{moment(props.event.end).format(\"h:mmA\")}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Event;","import React from \"react\";\nimport Event from \"./Event/Event\";\nimport \"./Schedule.scss\";\n\nclass Schedule extends React.Component {\n  render() {\n    let delay = -0.1;\n    const eventList = this.props.events.map((event, i) => {\n      return (\n        <Event\n          key={`event-${event.id}`}\n          event={event}\n          delay={(delay += 0.1)}\n          isRendered={this.props.isRendered}\n        />\n      );\n    });\n    return (\n      <div className=\"schedule\">\n        {this.props.events ? eventList : <h4>Nothing schedualed for today</h4>}\n      </div>\n    );\n  }\n}\n\nexport default Schedule;\n","import React from \"react\";\nimport \"./Tasks.scss\";\n\nconst Tasks = props => {\n    let delay = -0.1;\n  const tasks = props.tasks.map((task, i) => {\n    return (\n      <li key={task.id} className={`tasks-list__item id-${task.id} ${props.isRendered && \"task-ready\"}`} style={{animationDelay: `${(delay += 0.1)}s`}}>\n        <label className=\"label\">\n          <input onClick={props.deleteTask.bind(this, task.id )} className=\"label__checkbox\" type=\"checkbox\" />\n          <span className=\"label__text\">\n            <span className=\"label__check\">\n              <i className=\"fa fa-check icon\"></i>\n            </span>\n          </span>\n        </label>\n        {task.name}\n      </li>\n    );\n  });\n  return <ul className=\"tasks-list\">{tasks}</ul>;\n};\n\nexport default Tasks;\n","import moment from \"moment\";\n\nconst currentDate = moment().format(\"YYYY-MM-D\");\n\nconst data = {\n  weather: { temperature: 10, icon: \"PARTLY_CLOUDY_NIGHT\" },\n  events: [\n    {\n      id: \"fOTgzRDUQTgyQzExRTY0\",\n      name: \"Meeting with the team\",\n      start: \"2020-05-02T15:00:00+10:00\",\n      end: \"2020-05-02T16:00:00+10:00\",\n    },\n    {\n      id: \"fOTgtNUQ0QTgyQzExRTY4\",\n      name: \"New Event\",\n      start: \"2020-05-02T17:30:00+10:00\",\n      end: \"2020-05-02T20:00:00+10:00\",\n    },\n  ],\n  tasks: [\n    { id: 1, name: \"task\", isDone: 0 },\n    { id: 2, name: \"another task\", isDone: 0 },\n  ],\n  projects: [\"my-website\", \"another-project\"],\n  totalTime: [\n    [\"18\", \"45\"],\n    [\"00\", \"56\"],\n  ],\n  activities: [\n    [\n      {\n        date: \"2020-04-26\",\n        text: \"8 hrs 19 mins\",\n        total_seconds: 29996.112055,\n        percentage: 100,\n      },\n      {\n        date: \"2020-04-27\",\n        text: \"3 hrs 13 mins\",\n        total_seconds: 11585.477017,\n        percentage: 29,\n      },\n      {\n        date: \"2020-04-28\",\n        text: \"56 mins\",\n        total_seconds: 3415.242371,\n        percentage: 11,\n      },\n      {\n        date: \"2020-04-29\",\n        text: \"1 hr 41 mins\",\n        total_seconds: 6070.206872,\n        percentage: 20,\n      },\n      {\n        date: \"2020-04-30\",\n        text: \"2 hrs 50 mins\",\n        total_seconds: 10218.101258,\n        percentage: 34,\n      },\n      {\n        date: \"2020-05-01\",\n        text: \"31 mins\",\n        total_seconds: 1894.376399,\n        percentage: 6,\n      },\n      {\n        date: currentDate,\n        text: \"7 mins\",\n        total_seconds: 451.10386,\n        percentage: 2,\n      },\n    ],\n    [\n      { date: \"2020-10-25\", text: \"0 secs\", total_seconds: 0, percentage: 0 },\n      { date: \"2020-10-26\", text: \"0 secs\", total_seconds: 0, percentage: 0 },\n      { date: \"2020-10-27\", text: \"0 secs\", total_seconds: 0, percentage: 0 },\n      {\n        date: \"2020-10-28\",\n        text: \"37 mins\",\n        total_seconds: 2268.304124,\n        percentage: 100,\n      },\n      { date: \"2020-10-29\", text: \"0 secs\", total_seconds: 0, percentage: 0 },\n      {\n        date: \"2020-10-30\",\n        text: \"19 mins\",\n        total_seconds: 1147.005504,\n        percentage: 51,\n      },\n      { date: currentDate, text: \"0 secs\", total_seconds: 0, percentage: 0 },\n    ],\n  ],\n};\n\nexport default data;\n","// Utils\nimport React from \"react\";\nimport moment from \"moment\";\nimport \"./App.scss\";\n\n// Components\nimport Weather from \"./components/Weather/Weather\";\nimport Title from \"./components/Title/Title\";\nimport TimeTracker from \"./components/TimeTracker/TimeTracker\";\nimport ProjectsList from \"./components/TimeTracker/ProjectsList/ProjectsList\";\nimport Loading from \"./components/Loading/Loading\";\nimport Schedule from \"./components/Schedule/Schedule\";\nimport Tasks from \"./components/Tasks/Tasks\";\n\n// Data\nimport data from \"./data\";\nconst {weather, events, tasks, projects, totalTime, activities} = data;\n\nclass App extends React.Component {\n  state = {\n    displayLoading: true,\n    isFetching: false,\n    isFetchingActivity: false,\n    time: moment().format(\"LT\"),\n    date: moment().format(\"D MMM YYYY\"),\n    selectedProject: \"my-website-next\",\n    weather, \n    events, \n    tasks, \n    projects, \n    totalTime: totalTime[0], \n    activities: activities[0],\n    isRendered: false,\n    isReady: false,\n    scheduleReady: false,\n    tasksReady: false,\n    activityReady: false,\n  };\n\n\n  manipulateTime = (time, minutes) => moment(time, \"LT\").add(minutes, \"minutes\").format(\"LT\");\n\n\n  componentDidMount() {\n    this.setState({ isFetching: true, isFetchingActivity: true });\n    console.log(activities);\n    setInterval(() => {\n      const currentDate = moment();\n      const currentTime = moment().format(\"LT\");\n      this.setState({\n        time: currentTime,\n        date: currentDate.format(\"D MMM YYYY\"),\n      });\n    }, 1000);\n\n    this.setState({\n      isFetching: false,\n      isFetchingActivity: false,\n    });\n    setTimeout(() => {\n      this.setState({displayLoading: false});\n    }, 2500);\n  }\n\n  projectsDropdownHandler = event => {    // Done\n    this.setState({ isFetchingActivity: true });\n    const projectName = event.target.value;\n    if (projectName === this.state.projects[0]) this.setState({activities: activities[0], totalTime: totalTime[0]})\n    if (projectName === this.state.projects[1]) this.setState({activities: activities[1], totalTime: totalTime[1]})\n    this.setState({ isFetchingActivity: false });\n  };\n\n  addTaskHandler = e => {   // Done\n    e.preventDefault();\n    if (this.inputElement !== \"\") {\n      const newTask = {\n        id: this.state.tasks.length + 1,\n        name: this.inputElement.value,\n        isDone: 0,\n      };\n\n      this.setState({ tasks: [...this.state.tasks, newTask] });\n      this.inputElement.value = \"\";\n    }\n  };\n\n  deleteTaskHandler = taskId => {   // Done\n    const item = document.querySelector(`.id-${taskId}`);\n    const itemCheckbox = document.querySelector(\".label__checkbox:checked\");\n    item.style.animationDelay = \"0s\";\n    itemCheckbox.disabled = true;\n\n    setTimeout(() => {\n      item.classList.add(\"task-deleted\");\n    }, 1000);\n    setTimeout(() => {\n      const updatedTasksArr = this.state.tasks.filter(task => task.id !== taskId);\n      this.setState({ tasks: updatedTasksArr });\n    }, 1500);\n  };\n\n  onLoadedData = () => {    // Done\n    setTimeout(() => {\n      this.setState({ isReady: true });\n    }, 10);\n    setTimeout(() => {\n      this.setState({ scheduleReady: true });\n      document.body.style.overflow = \"initial\";\n    }, 800);\n    setTimeout(() => {\n      this.setState({ tasksReady: true });\n    }, 1100);\n    setTimeout(() => {\n      this.setState({ isRendered: true, activityReady: true });\n    }, 1500);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.displayLoading && (\n          <Loading onLoadedData={this.onLoadedData} />\n        )}\n        <header\n          className={`App__header ${this.state.isReady && \"App__header-ready\"}`}\n        >\n          <div className=\"date-col\">\n            <p>{this.state.date}</p>\n          </div>\n          <div className=\"weather-col\">\n            <Weather weather={this.state.weather} />\n          </div>\n          <div className=\"time-col\">\n            <p>{this.state.time}</p>\n          </div>\n        </header>\n        <main className=\"App__main\">\n          <div\n            className={`schedule-col ${this.state.isReady &&\n              \"schedule-col-ready\"}`}\n          >\n            <Title title=\"SCHEDULE\" />\n            {this.state.events.length ? (\n              <Schedule\n                events={this.state.events}\n                isRendered={this.state.scheduleReady}\n              />\n            ) : null}\n          </div>\n          <div\n            className={`tasks-col ${this.state.isReady && \"tasks-col-ready\"}`}\n          >\n            <Title title=\"TASKS\" />\n            <form className=\"task-form\" onSubmit={this.addTaskHandler}>\n              <input\n                ref={a => (this.inputElement = a)}\n                className=\"task-form__input\"\n                type=\"text\"\n                placeholder=\"Add Task ...\"\n              />\n              <button className=\"task-form__btn\" type=\"submit\">\n                +\n              </button>\n            </form>\n            <Tasks\n              tasks={this.state.tasks}\n              deleteTask={this.deleteTaskHandler}\n              elementRef={this.elementRef}\n              isRendered={this.state.tasksReady}\n            />\n          </div>\n          <div\n            className={`wakatime-col ${this.state.isReady &&\n              \"wakatime-col-ready\"}`}\n          >\n            <Title title=\"CODING ACTIVITY\" />\n            <ProjectsList\n              isFetchingActivity={this.state.isFetchingActivity}\n              projectsDropdownHandler={this.projectsDropdownHandler}\n              projects={this.state.projects}\n            />\n            <TimeTracker\n              isRendered={this.state.isRendered}\n              activities={this.state.activities}\n              totalTime={this.state.totalTime}\n            />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}